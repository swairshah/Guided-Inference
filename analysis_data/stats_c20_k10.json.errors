GPU 0: CUDA out of memory. Tried to allocate 1.46 GiB. GPU 0 has a total capacity of 79.11 GiB of which 948.94 MiB is free. Including non-PyTorch memory, this process has 78.17 GiB memory in use. Of the allocated memory 61.34 GiB is allocated by PyTorch, and 16.18 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.31 GiB. GPU 3 has a total capacity of 79.11 GiB of which 816.94 MiB is free. Including non-PyTorch memory, this process has 78.30 GiB memory in use. Of the allocated memory 51.44 GiB is allocated by PyTorch, and 26.20 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.35 GiB. GPU 3 has a total capacity of 79.11 GiB of which 1.21 GiB is free. Including non-PyTorch memory, this process has 77.89 GiB memory in use. Of the allocated memory 54.14 GiB is allocated by PyTorch, and 23.09 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 712.00 MiB. GPU 3 has a total capacity of 79.11 GiB of which 530.94 MiB is free. Including non-PyTorch memory, this process has 78.58 GiB memory in use. Of the allocated memory 51.80 GiB is allocated by PyTorch, and 26.13 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.31 GiB. GPU 3 has a total capacity of 79.11 GiB of which 530.94 MiB is free. Including non-PyTorch memory, this process has 78.58 GiB memory in use. Of the allocated memory 51.43 GiB is allocated by PyTorch, and 26.49 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.34 GiB. GPU 3 has a total capacity of 79.11 GiB of which 1.16 GiB is free. Including non-PyTorch memory, this process has 77.94 GiB memory in use. Of the allocated memory 53.72 GiB is allocated by PyTorch, and 23.57 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 1: CUDA out of memory. Tried to allocate 1.29 GiB. GPU 1 has a total capacity of 79.11 GiB of which 368.94 MiB is free. Including non-PyTorch memory, this process has 78.74 GiB memory in use. Of the allocated memory 49.88 GiB is allocated by PyTorch, and 28.20 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.31 GiB. GPU 3 has a total capacity of 79.11 GiB of which 1.16 GiB is free. Including non-PyTorch memory, this process has 77.94 GiB memory in use. Of the allocated memory 51.62 GiB is allocated by PyTorch, and 25.66 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.31 GiB. GPU 3 has a total capacity of 79.11 GiB of which 500.94 MiB is free. Including non-PyTorch memory, this process has 78.61 GiB memory in use. Of the allocated memory 51.76 GiB is allocated by PyTorch, and 26.19 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 1.30 GiB. GPU 3 has a total capacity of 79.11 GiB of which 1.16 GiB is free. Including non-PyTorch memory, this process has 77.94 GiB memory in use. Of the allocated memory 51.56 GiB is allocated by PyTorch, and 25.72 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 0: CUDA out of memory. Tried to allocate 1.45 GiB. GPU 0 has a total capacity of 79.11 GiB of which 644.94 MiB is free. Including non-PyTorch memory, this process has 78.47 GiB memory in use. Of the allocated memory 59.62 GiB is allocated by PyTorch, and 18.20 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 688.00 MiB. GPU 3 has a total capacity of 79.11 GiB of which 500.94 MiB is free. Including non-PyTorch memory, this process has 78.61 GiB memory in use. Of the allocated memory 51.62 GiB is allocated by PyTorch, and 26.34 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
