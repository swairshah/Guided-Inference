GPU 3: CUDA out of memory. Tried to allocate 758.00 MiB. GPU 3 has a total capacity of 79.11 GiB of which 600.94 MiB is free. Including non-PyTorch memory, this process has 78.51 GiB memory in use. Of the allocated memory 54.86 GiB is allocated by PyTorch, and 23.00 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 760.00 MiB. GPU 3 has a total capacity of 79.11 GiB of which 598.94 MiB is free. Including non-PyTorch memory, this process has 78.52 GiB memory in use. Of the allocated memory 53.94 GiB is allocated by PyTorch, and 23.91 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 0: CUDA out of memory. Tried to allocate 828.00 MiB. GPU 0 has a total capacity of 79.11 GiB of which 68.94 MiB is free. Including non-PyTorch memory, this process has 79.03 GiB memory in use. Of the allocated memory 59.43 GiB is allocated by PyTorch, and 18.95 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
GPU 3: CUDA out of memory. Tried to allocate 766.00 MiB. GPU 3 has a total capacity of 79.11 GiB of which 434.94 MiB is free. Including non-PyTorch memory, this process has 78.68 GiB memory in use. Of the allocated memory 55.04 GiB is allocated by PyTorch, and 22.97 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
